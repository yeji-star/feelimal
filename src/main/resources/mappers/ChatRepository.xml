<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.feel.repository.ChatRepository">

	<!-- 사용자 메세지를 chatDiary에 저장 -->
	<insert id="writeUserMessage">
		INSERT INTO chatDiary
		SET memberId = #{memberId},
		body
		= #{body},
		regDate = NOW(),
		updateDate = NOW(),
		isChat = true,
		emoTagId =
		0

	</insert>

	<!-- 최근 저장된 id 조회 -->
	<select id="getLastInsertId" resultType="int">
		SELECT LAST_INSERT_ID()
	</select>

	<!-- AI 응답 저장 -->
	<insert id="writeAiReply">
		INSERT INTO aiReply
		SET chatdiaryId = #{chatId},
		reply
		= #{reply},
		model = #{model},
		regDate = NOW(),
		updateDate = NOW()
	</insert>

	<!-- 단일 메시지+응답 조회 -->
	<select id="getChatWithAiByChatId"
		resultType="com.example.feel.vo.ChatWithAi">
		SELECT
		cd.id AS chatId,
		cd.body AS userBody,
		cd.regDate AS
		userRegDate,
		ar.reply AS aiReply,
		ar.model AS model,
		ar.regDate AS
		aiRegDate
		FROM chatDiary AS cd
		LEFT JOIN aiReply AS ar ON cd.id =
		ar.chatdiaryId
		WHERE cd.id = #{chatId}
		AND cd.isChat = true
		AND
		cd.delStatus = 0
	</select>

	<!-- 전체 채팅 목록 -->
	<select id="getChatWithAiListByMemberId"
		resultType="com.example.feel.vo.ChatWithAi">
		SELECT
		cd.id AS chatId,
		cd.body AS userBody,
		cd.regDate AS
		userRegDate,
		ar.reply AS aiReply,
		ar.model AS model,
		ar.regDate AS
		aiRegDate
		FROM chatDiary cd
		LEFT JOIN aiReply ar ON cd.id =
		ar.chatdiaryId
		WHERE cd.memberId = #{memberId}
		AND cd.isChat = true
		AND
		cd.delStatus = 0
		ORDER BY cd.id DESC
	</select>

	<!-- 사용자 메시지 수정 -->
	<update id="modifyChat">
		UPDATE chatDiary
		SET body = #{newBody},
		updateDate = NOW()
		WHERE id = #{chatId}
		AND memberId = #{memberId}
		AND isChat = true
		AND delStatus = 0
	</update>

	<!-- 사용자 메시지 삭제 -->
	<update id="deleteById">
		UPDATE chatDiary
		SET delStatus = 1,
		delDate = NOW()
		WHERE id = #{chatId}
		AND memberId = #{memberId}
		AND isChat = true
	</update>

</mapper>
